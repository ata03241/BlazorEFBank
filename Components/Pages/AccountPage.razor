@page "/{accountId:int}"
@using BlazorEFIdentity.Model
@using BlazorEFIdentity.Data
@using BlazorEFIdentity.Services

@inject AccountService accountService

<h1 style="margin-left: 15%;">@account.Name</h1>

<div class="d-flex g-3" style="justify-content: center; margin-top: 4%;">
    <div class=" p-3 border rounded" style="min-height: 17vh; width: 30%; margin-right: 2%;">
        <h1 class="text-center text-uppercase font-weight-bold" style="font-size: 1.5rem;">Overview</h1>
        <div class="alert alert-secondary text-center mt-2">
            <h4>Available amount</h4>
            <h3>$@account.Balance.ToString("N2")</h3>
        </div>
    </div>
    <div class=" p-3 border rounded" style="min-height: 17vh; width: 30%;">
        <h1 class="text-center text-uppercase font-weight-bold" style="font-size: 1.5rem;">Account Details</h1>
        <div class="alert alert-secondary text-center mt-2">
            <h6>Clearningsnumber: 9876-5</h6>
            <h6>AccountNumber: @account.AccountNumber</h6>
        </div>
    </div>
</div>

<div class="d-flex justify-content-between mt-4 gap-3">
    <div class="container mt-4" style="height: auto; width: 60%; border: 2px solid gray;">
        <h3 class="text-center">Transaction History</h3>

        <table class="table table-striped table-bordered">
            <thead class="table-dark">
                <tr>
                    <th>ID</th>
                    <th>From Account</th>
                    <th>To Account</th>
                    <th>Date</th>
                    <th>Outgoing Balance</th>
                    <th>Is Reserved</th>
                    <th>Message</th>
                </tr>
            </thead>
            <tbody>
                @if (transactions != null && transactions.Any())
                {
                    @foreach (var transaction in transactions)
                    {
                        <tr>
                            <td>@transaction.Id</td>
                            <td>@transaction.FromAccount?.Name</td>
                            <td>@transaction.ToAccountName</td>
                            <td>@transaction.Date.ToString("yyyy-MM-dd")</td>
                            <td>@transaction.outgoingbalance</td>
                            <td>@transaction.IsReserved</td>
                            <td>@transaction.Messages</td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="7" class="text-center">No transactions found.</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>


@code {
    [Parameter]
    public int accountId { get; set; }
    private Account account { get; set; }
    private List<Transaction> transactions = new List<Transaction>();

    protected override async Task OnInitializedAsync()
    {
        account = await accountService.GetAccountById(accountId);
        transactions = await accountService.GetTransactionAsync(accountId);
    }
}
